<?xml version="1.0" encoding="utf-8"?>

<!--

    ADOBE SYSTEMS INCORPORATED
    Copyright 2008 Adobe Systems Incorporated
    All Rights Reserved.

    NOTICE: Adobe permits you to use, modify, and distribute this file
    in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for a Spark RadioButton component.  

       @see spark.components.RadioButton
       @see spark.components.RadioButtonGroup
        
      @langversion 3.0
      @playerversion Flash 10
      @playerversion AIR 1.5
      @productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
    xmlns:fb="http://ns.adobe.com/flashbuilder/2009" alpha.disabledStates="0.5">

    <fx:Metadata>
    <![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.RadioButton")]
    ]]>
    </fx:Metadata> 
    
    <fx:Script fb:purpose="styling">

        /* Define the skin elements that should not be colorized. 
           For button, the graphics are colorized but the label is not. */
        static private const exclusions:Array = ["labelDisplay"];

        /**
         * @private
         */
        override public function get colorizeExclusions():Array {return exclusions;}
        
        /**
         * @private
         */
        override protected function initializationComplete():void
        {
            useChromeColor = true;
            super.initializationComplete();
        }
    </fx:Script>
    
    <fx:Script>
        <![CDATA[
        /** 
         * @private 
         */     
        private static const focusExclusions:Array = ["labelDisplay"];

        /**
         *  @private
         */
        override public function get focusSkinExclusions():Array { return focusExclusions;}
        ]]>
    </fx:Script>
    
    <s:states>
        <s:State name="up" />
        <s:State name="over" stateGroups="overStates" />
        <s:State name="down" stateGroups="downStates" />
        <s:State name="disabled" stateGroups="disabledStates" />
        <s:State name="upAndSelected" stateGroups="selectedStates" />
        <s:State name="overAndSelected" stateGroups="overStates, selectedStates" />
        <s:State name="downAndSelected" stateGroups="downStates, selectedStates" />
        <s:State name="disabledAndSelected" stateGroups="disabledStates, selectedStates" />
    </s:states>
    
	<s:Image 
		verticalCenter="0" 
		x="0"
		source.up="@Embed('/../assets/radio-button-up.png')"
		source.over="@Embed('/../assets/radio-button-over.png')"
		source.down="@Embed('/../assets/radio-button-selected.png')"
		source.disabled="@Embed('/../assets/radio-button-up.png')"
		source.upAndSelected="@Embed('/../assets/radio-button-selected.png')"
		source.overAndSelected="@Embed('/../assets/radio-button-selected.png')"
		source.downAndSelected="@Embed('/../assets/radio-button-selected.png')"
		source.disabledAndSelected="@Embed('/../assets/radio-button-selected.png')"
		alpha.disabled="0.5"/>


    <!-- Label -->
    <!---  @copy spark.components.supportClasses.ButtonBase#labelDisplay -->
    <s:Label id="labelDisplay"
             textAlign="start"
             verticalAlign="middle"
             maxDisplayedLines="1"
			 fontSize="16"
			 color.up="0xBCBEC0"
			 color.over="0x939598"
			 color.down="0xFFC20E"
			 color.disabled="0xBCBEC0"
			 color.upAndSelected="0xFFC20E"
			 color.overAndSelected="0xFFC20E"
			 color.disabledAndSelected="0xFFC20E"
			 color.downAndSelected="0xFFC20E"
			 fontFamily="Century Gothic"
			 fontWeight="bold"
             left="18" right="0" top="2" bottom="2" verticalCenter="2" />

</s:SparkSkin>
